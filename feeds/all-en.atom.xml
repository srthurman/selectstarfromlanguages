<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>A Pelican Blog</title><link href="/" rel="alternate"></link><link href="/feeds/all-en.atom.xml" rel="self"></link><id>/</id><updated>2015-04-11T00:00:00+00:00</updated><entry><title>Object Oriented Principles Part 1: Python</title><link href="/oo_principles_python.html" rel="alternate"></link><updated>2015-04-11T00:00:00+00:00</updated><author><name></name></author><id>tag:,2015-04-11:oo_principles_python.html</id><summary type="html">&lt;p&gt;For my latest assignment at work, I need to learn Java, which seemed a little daunting at first. The syntax is much more verbose, and I haven't dealt with a compiled language before. As I was going through tutorials, I was presented with a lot of Object Oriented concepts I had not come into contact with before. I knew what objects and classes were, and was familiar with the idea of inheritance. But other concepts, like interfaces, constructors, and polymorphism, were new ideas, or at least new vocabulary.&lt;/p&gt;
&lt;p&gt;I wanted to investigate how some of these concepts are applied in Python and Javascript. This is part 1, exploring OO Programming and Python.&lt;/p&gt;
&lt;p&gt;It may be helpful to check out one of the resources below if you're rusty on or totally unfamiliar with OO programming. I won't go into the more common concepts in as much depth.&lt;/p&gt;
&lt;h2&gt;Class&lt;/h2&gt;
&lt;p&gt;A class is the blueprint for an object. It tells what data (variables) and methods (functions) an object should have. The basic syntax is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;className&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parentObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Pretty simple. Let's see an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DothrakiMan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hairLength&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
        &lt;span class="c"&gt;## Units are inches, because Dothraki don&amp;#39;t like the metric system either&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hairLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hairLength&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cutHair&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
        &lt;span class="n"&gt;hairLength&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;      
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here we have a class to create a DothrakiMan. We've included the attributes of a name, and his hair length. He can cut his hair and, well that's it for now.&lt;/p&gt;
&lt;h2&gt;Object&lt;/h2&gt;
&lt;p&gt;An object is an &lt;em&gt;instance&lt;/em&gt; of a class. In other words, an object is the thing you create with a class. Let's see an example.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Drogo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DothrakiMan&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Khal Drogo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we have the &lt;strong&gt;object&lt;/strong&gt; Drogo, made from the &lt;strong&gt;class&lt;/strong&gt; DothrakiMan. You can make as many objects as you want from that one class.&lt;/p&gt;
&lt;p&gt;Now that the bare basics are out of the way, let's talk about some more interesting things.&lt;/p&gt;
&lt;h2&gt;Encapsulation&lt;/h2&gt;
&lt;p&gt;There are two components to encapsulation.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;grouping data and functions into a single, logical group.&lt;/li&gt;
&lt;li&gt;protecting those data and methods/preventing unauthorized access, aka "data hiding".&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In defining the term, some sources use just one component, some use both. Whatever the case, encapsulation is most often acheived through the use of classes (there are exceptions, which we'll see with Javascript). The whole purpose of a class is to group data and functionality into a convenient package.&lt;/p&gt;
&lt;p&gt;Python really only uses the first component. Data hiding is kind of possible, but not fully.&lt;/p&gt;
&lt;p&gt;A little background: in Java, when creating data or methods, you include the keyword 'public', 'private', or 'protected'. Those define whether or not you can directly access an item from the object created from a given class. If we pretend we created our class DothrakiMan and object Drogo in Java, and set the &lt;code&gt;name&lt;/code&gt; attribute as private, you would not be able to do &lt;code&gt;Drogo.name&lt;/code&gt;. Instead you would have to use what's called a getter method, discussed below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EncapsulationClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;semi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;prv&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pub&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_semiPrivate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;semi&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__private&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prv&lt;/span&gt;

&lt;span class="n"&gt;encapsulateObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;EncapsulationClass&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In our &lt;code&gt;EncapsulationCLass&lt;/code&gt; class, we have three different attributes. The first one, &lt;code&gt;self.public&lt;/code&gt;, we have seen before. You can access it directly on an object like &lt;code&gt;encapsulateObject.public&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the second attribute, &lt;code&gt;self._semiPrivate&lt;/code&gt;, the underscore at the beginning of the name denotes that this attribute should be regarded as private. It's letting others know you shouldn't access it directly. However, there is no enforced protection. &lt;code&gt;encapsulateObject._semiPrivate&lt;/code&gt; would run without error, and return the value of the attribute.&lt;/p&gt;
&lt;p&gt;The last attribute has two _ at the beginning, and does provide a little extra protection through "name mangling." If you were to try to run &lt;code&gt;encapsulateObject.__private&lt;/code&gt;, you would get the error below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;lt;stdin&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="ne"&gt;AttributeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;EncapsulationClass&amp;#39;&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;no&lt;/span&gt; &lt;span class="n"&gt;attribute&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;__private&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But if you ran &lt;code&gt;encapsulateObject._EncapsulationClass__private&lt;/code&gt;, blamo, you have access to the attribute. So by using &lt;code&gt;objectName._className__privateAttributeName&lt;/code&gt; you can access those so called private attributes and methods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.jeffknupp.com/blog/2014/06/18/improve-your-python-python-classes-and-object-oriented-programming/"&gt;Jeff Knupp - Python Classes and OO Programming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://learnpythonthehardway.org/book/index.html"&gt;Learn Python the Hard Way - Lessons 40-44&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.lynda.com/Programming-tutorials/Foundations-of-Programming-Object-Oriented-Design/96949-2.html"&gt;Lynda.com - Object-Oriented Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.python-course.eu/object_oriented_programming.php"&gt;python-course.eu - Object Oriented Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="computer language"></category><category term="python"></category><category term="java"></category><category term="object oriented"></category></entry><entry><title>Object Oriented Principles for Python and Javascript</title><link href="/oo_principles_python_and_javascript.html" rel="alternate"></link><updated>2015-04-05T00:00:00+00:00</updated><author><name></name></author><id>tag:,2015-04-05:oo_principles_python_and_javascript.html</id><summary type="html">&lt;h3&gt;Javascript&lt;/h3&gt;
&lt;p&gt;So, the thing with Javascript is it doesn't have classes. Instead, you create functions which serve as the blueprints for making objects. These functions are your defacto classes. It may seem odd that you would use a function to create objects, but in Javascript, functions are (takes off the Scooby Doo villain mask)...objects! Functions are objects, and you can use them to create other objects. Confused yet?&lt;/p&gt;
&lt;p&gt;It's ok. I link to some resources at the bottom that will explain things in more detail. The main thing to be aware of is that, because your "classes" are just functions, &lt;/p&gt;
&lt;h2&gt;Inheritance&lt;/h2&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;p&gt;Inheritance in Python is incredibly simple. That's nice, as it will be a nice offset from Javascript.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;className&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parentObject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Javascript&lt;/h3&gt;
&lt;p&gt;Yet again, Javascript is proving to be a bit trickier. Because Javascript doesn't have proper classes, there isn't one way to implement inheritance. That could be good since you have options, and thus flexibility, but it can also feel a bit overwhelming. Rather than go over all the different methods, which is a whole discussion on its own, I'll show the technique often touted as the best(according to JSissexy and professional web dev book): Parasitic Combination Inheritance.&lt;/p&gt;
&lt;p&gt;Don't worry about that name, but now you know what to search for if you want more information.
The thing I was getting confused about was the .call(this,...) line. When you use .call, you're actually modifying the object you pass in. So when you call Question.call(this,...) you're modifying the &lt;code&gt;this&lt;/code&gt; of your subclass, aka the instance you create.&lt;/p&gt;</summary><category term="computer language"></category><category term="python"></category><category term="javascript"></category><category term="java"></category></entry><entry><title>Plan of attack for learning French</title><link href="/how_im_learning_french.html" rel="alternate"></link><updated>2015-03-29T00:00:00+00:00</updated><author><name></name></author><id>tag:,2015-03-29:how_im_learning_french.html</id><summary type="html">&lt;p&gt;I want to share the resources I'm using to learn French. I started this a grand total of 5 days ago, so this isn't a review.&lt;/p&gt;
&lt;h3&gt;Fluent Forever&lt;/h3&gt;
&lt;p&gt;The main technique I'll be using is that outlined by Gabriel Wyner in his book and site &lt;a href="https://fluent-forever.com/"&gt;Fluent Forever&lt;/a&gt; (FF). The basic idea is that you first train your ears to hear your new language, then start learning a base vocabulary of 625 words using only pictures, no direct translation. From there you go on to grammar and making real, comprehensible sentences. All learning is based around using the spaced repetition learning technique, using the spaced repetition software (SRS) &lt;a href="http://ankisrs.net/"&gt;Anki&lt;/a&gt;. Anki, aside from being free, is also open source and written in Python. I'll do a future post going into more detail, but if any of that is interesting to you, check out the &lt;a href="http://ankisrs.net/docs/addons.html"&gt;docs&lt;/a&gt; on creating add-ons.&lt;/p&gt;
&lt;p&gt;Wait a minute - why would you need to train your ears before diving into vocabulary? Because there are sounds you physically cannot hear currently! Your brain just can't distinguish them. And if you can't hear a certain sound, you certainly won't be able to make that sound when speaking. Not to mention the whole not being able to understand what other people are saying thing. Gabe goes into more detail in the book, and it's pretty interesting, at least to me.&lt;/p&gt;
&lt;p&gt;One of the coolest parts about FF is that Gabe sells pronunciation trainers and professional audio recordings of all 625 words in the base word list, but he also tells you exactly how to do it yourself. And he does so on the site, not just the book. The book goes into more detail, but you don't &lt;em&gt;have&lt;/em&gt; to get it to know what to do. Benefits:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The whole process can be totally free!&lt;/li&gt;
&lt;li&gt;You can create resources for a language FF doesn't cover.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I bought the French pronunciation trainer and word list bundle. It was $20 and saves so much time. You can visit &lt;a href="https://fluent-forever.com/bundles/"&gt;the shop&lt;/a&gt; if you want to buy one too.&lt;/p&gt;
&lt;h3&gt;Podcasts&lt;/h3&gt;
&lt;p&gt;I'll be supplementing this primary training with a podcast or two. The podcasts aren't for memorizing any specific words or grammar rules, but just for listening to French spoken more naturally, not just the isolated words of initial vocab training. I've been testing a few out, and so far I've liked &lt;a href="http://www.learnfrenchbypodcast.com/"&gt;Learn French by Podcast&lt;/a&gt; and &lt;a href="https://radiolingua.com/coffeebreakfrench/"&gt;Coffee Break French&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Disclaimer: I am in no way affiliated with Fluent Forever, Learn French by Podcast, nor Coffee Break French.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Resources&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fluent-forever.com/"&gt;Fluent Forever&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ankisrs.net/"&gt;Anki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.learnfrenchbypodcast.com/"&gt;Learn French by Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://radiolingua.com/coffeebreakfrench/"&gt;Coffee Break French&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="human language"></category><category term="french"></category><category term="anki"></category></entry><entry><title>Learning programming == learning foreign language?</title><link href="/learning-lang-equals-learning-lang.html" rel="alternate"></link><updated>2015-03-21T00:00:00+00:00</updated><author><name></name></author><id>tag:,2015-03-21:learning-lang-equals-learning-lang.html</id><summary type="html">&lt;p&gt;Did you know several states in the US have or have proposed measures that would allow substituting learning computer programming instead of taking a foreign language? Did you know that's possibly not that far off the mark? In many cases the push is to have the programming courses count as a math or science credit, but looking at (admittedly limited) evidence, it might make just as much sense to make it a language credit.&lt;/p&gt;
&lt;p&gt;Researchers from several universities and other organizations took a peek inside programmers brains using an fMRI machine while they were reading code snippets. The results:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We found a strong relation to language processing. To understand source code, participants had to process single words and symbols as well as statements that consist of single words.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To be fair, this is only one study, and the participants weren't actually writing code. By that measure it seems unsurprising that reading code would involve language processing. So perhaps adding Java or Python to the list of foreign languages offered is a bit premature.&lt;/p&gt;
&lt;p&gt;There are detractors to the teaching of foreign languages in school at all. To those people, perhaps the substitution would make sense based on a more economic, what's going to give the most tangible benefit, viewpoint.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;All of this study seems to totally fail to teach people how to fluently speak foreign languages. So we can actually see in the data is that under 1 percent of Americans have learned to speak a foreign language very well in school.&lt;/li&gt;
&lt;li&gt;It’s pretty close to about one sixth of the time that students are spending in high school assuming that they start the foreign language in high school...And remember there is something else that students could be learning at that time. &lt;/li&gt;
&lt;li&gt;-Bryan Caplan of George Mason University (from episode 158 of the Freakonomics podcast)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Caplan doesn't talk about programming as the "something else", but that's certainly an option. And since English is already the lingua franca for many around the world, at least in business/professional contexts, learning to program could provide more financial benefits than knowing a foreign language.&lt;/p&gt;
&lt;p&gt;I'm not actually advocating any particular position, I just found these data very interesting. And apropros for the first post. The questions of if we should be teaching kids to code, to speak a foreign language, and what the benefits of both may be are much bigger than this one post. But you reader (hi mom) are probably an adult, so you get to decide for yourself! Personal or professional, it's your choice.&lt;/p&gt;
&lt;p&gt;Now I would like to know how many people that speak a foreign language are polyglots vs those that know programming languages.&lt;/p&gt;
&lt;p&gt;I would like to thank the CodeNewbie podcast and William Jeffries for providing the inspiration for this post. I hadn't heard of the fMRI research before William mentioned it.&lt;/p&gt;
&lt;p&gt;Resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.infosun.fim.uni-passau.de/cl/publications/docs/SKA+14.pdf"&gt;Understanding Understanding Source Code with Functional Magnetic Resonance Imaging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.fastcolabs.com/3029364/this-is-your-brain-on-code-according-to-functional-mri-imaging"&gt;This Is Your Brain On Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.huffingtonpost.com/chris-parnin/scientists-begin-looking-_b_4829981.html"&gt;Scientists Begin Looking at Programmers' Brains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.techrepublic.com/article/coding-as-a-second-language-kentucky-jockeys-to-be-next-to-join-the-movement/"&gt;Coding as a second language?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://freakonomics.com/2014/03/06/is-learning-a-foreign-language-really-worth-it-a-new-freakonomics-radio-podcast/"&gt;Is Learning a Second Language Really Worth It? - Freakonomics Podcast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.codenewbie.org/podcast/from-student-project-to-big-app"&gt;From Student Project to Big App - CodeNewbie Podcast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="human language"></category><category term="computer language"></category></entry></feed>